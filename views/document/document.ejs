<%- include('../components/head.ejs') %>
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">

  <div class="container-fluid document-section mt-3">
    <!--Todo Add Pass/Reject Buttton-->
    <% if (documents.status == 'pending') { %>
    <div class="btn-group mt-2" role="group" aria-label="Basic mixed styles">
      <!-- Change this to Sweet alert -->
      <!-- <a href="/documents/reject/<%= documents._id %>" id="reject" class="btn btn-danger">ไม่ผ่าน</a>
      <a href="/documents/approve/<%= documents._id %>" id="pass" class="btn btn-success">ผ่าน</a> -->
      <button type="button" class="btn btn-danger" id="reject">ไม่ผ่าน</button>
      <button type="button" class="btn btn-success" id="pass">ผ่าน</button>
    </div>
    <% } %>
    <!-- <a href="/documents/edit/<%= documents._id %>" class="btn btn-info" >แก้ไข</a> -->
    <a href="/documents/delete/<%= documents._id %>" class="btn btn-info" >ลบเอกสาร</a>
    <div class="show-content">
      <h3>
        <%= documents.name %>
      </h3>
      <div id="adobe-dc-view"></div>
      <script src="https://documentservices.adobe.com/view-sdk/viewer.js"></script>
      <script type="text/javascript">
        document.addEventListener("adobe_dc_view_sdk.ready", function () {
          var adobeDCView = new AdobeDC.View({ clientId: "4b72b565a8fa4724b52148a70c0dcc10", divId: "adobe-dc-view" });
          adobeDCView.previewFile({
            content: { location: { url: "<%= documents.file %>" } },
            metaData: { fileName: "<%= documents.name %>" },
          }, {
            embedMode: "FULL_WINDOW",
            defaultViewMode: "FIT_PAGE",
            showDownloadPDF: false,
            showPrintPDF: false,
            showLeftHandPanel: false,
            showAnnotationTools: true
          });

          const saveOptions = {

            autoSaveFrequency: 0,

            enableFocusPolling: true,

            showSaveButton: true

          }

          const profile = {
            userProfile: {
              name: '<%= user.prefix %> <%= user.name %>',
              firstName: '',
              lastName: '',
              email: ''
            }

          };

          /*  LOGIC Functions
          onClick Save button -> save Document to Server -> response result data to Client by alert */

          /*Problem : Save pdf onserver not work  
          TODO : fixed Save API Callback
          //FIXED: Save button Not Show when file Edited  */
          //Solution : add Action to Callback function to Save Data by POST Method

          adobeDCView.registerCallback(
            AdobeDC.View.Enum.CallbackType.GET_USER_PROFILE_API,
            function () {
              return new Promise((resolve, reject) => {
                resolve({
                  code: AdobeDC.View.Enum.ApiResponseCode.SUCCESS,
                  data: profile
                });
              });
            }
          );



          adobeDCView.registerCallback(
            AdobeDC.View.Enum.CallbackType.SAVE_API,
            function (metaData, content, options) {
              /* Add your custom save implementation here...and based on that resolve or reject response in given format */
              var uint8Array = new Uint8Array(content);
              var blob = new Blob([uint8Array], { type: 'application/pdf' });
              //Create From data like Form tag Html
              var formData = new FormData();
              //Send Form data to Server 
              //file: fileblob
              //name: document.name
              //path: document.file
              //console.log(metaData);
              var path = '<%= documents.file %>';

              console.log(path);
              formData.append('file', blob, path);
              formData.append('id', '<%= documents._id %>');
              formData.append('name', '<%= documents.name %>-แก้ไข');
              fetch('/documents/save', {
                method: 'POST',
                body: formData
              }).then(function (response) {
                if (response.status === 200) {
                  response.json().then(function (data) {
                    /* Resolve the save API promise with the response data */
                    options.success(data);
                  });
                } else {
                  /* Reject the save API promise with error message */
                  options.error('Error while saving file');
                }
              });

              // fetch('/documents/test', {
              //   method: 'POST'
              // });
              return new Promise((resolve, reject) => {
                resolve({
                  code: AdobeDC.View.Enum.ApiResponseCode.SUCCESS,
                  data: {
                    /* Updated file metadata after successful save operation */
                    metaData: {
                      /* Updated file name */
                      fileName: "<%= documents.name %>-แก้ไข" + ".pdf",
                    }
                  }
                });
              });
            },
            saveOptions
          );
        });
      </script>
      <script type="text/javascript">
          document.getElementById("reject").addEventListener("click", reject);
          document.getElementById("pass").addEventListener("click", pass);

          function reject() {
            Swal.fire({
              title: 'คุณต้องการไม่ผ่านเอกสารนี้ใช่หรือไม่?',
              text: "คุณจะไม่สามารถกู้คืนไฟล์นี้ได้!",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'ใช่, ไม่ผ่าน!',
              cancelButtonText: 'ยกเลิก'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = "/documents/reject/<%= documents._id %>";
              }
            })
          }

          function pass() {
            Swal.fire({
              title: 'คุณต้องการผ่านเอกสารนี้ใช่หรือไม่?',
              text: "คุณจะไม่สามารถกู้คืนไฟล์นี้ได้!",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'ใช่, ผ่าน!',
              cancelButtonText: 'ยกเลิก'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = "/documents/approve/<%= documents._id %>";
              }
            })
          }
      </script>
      </script>
    </div>
  </div>