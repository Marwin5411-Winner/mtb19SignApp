<%- include('../components/head.ejs') %>
  <div class="container-fluid document-section">
    <div class="show-content">
      <h3>
        <%= documents.name %>
      </h3>
      <div id="adobe-dc-view"></div>
      <script src="https://documentcloud.adobe.com/view-sdk/main.js"></script>
      <script type="text/javascript">
        document.addEventListener("adobe_dc_view_sdk.ready", function () {
          var adobeDCView = new AdobeDC.View({ clientId: "24ff61c4306f4824b26653bad3fccbda", divId: "adobe-dc-view" });
          adobeDCView.previewFile({
            content: { location: { url: "/<%= documents.file %>" } },
            metaData: { fileName: "<%= documents.name %>" },
          }, {
            embedMode: "FULL_WINDOW",
            defaultViewMode: "FIT_PAGE",
            showDownloadPDF: false,
            showPrintPDF: false,
            showLeftHandPanel: false,
            showAnnotationTools: true
          });
          const saveOptions = {

            autoSaveFrequency: 0,

            enableFocusPolling: false,

            showSaveButton: true

          }

          /*  LOGIC Functions
          onClick Save button -> save Document to Server -> response result data to Client by alert */

          /*Problem : Save pdf onserver not work  
          TODO : fixed Save API Callback
          //FIXED: Save button Not Show when file Edited  */
          //Solution : add Action to Callback function to Save Data by POST Method



          adobeDCView.registerCallback(
            AdobeDC.View.Enum.CallbackType.SAVE_API,
            function (metaData, content, options) {
              /* Add your custom save implementation here...and based on that resolve or reject response in given format */
              var uint8Array = new Uint8Array(content);
              var blob = new Blob([uint8Array], { type: 'application/pdf' });
              //Create From data like Form tag Html
              var formData = new FormData();
              formData.append('file', blob, metaData.fileName);
              formData.append('name', '<%= documents.name %>-แก้ไข');
              formData.append('path', '<%= documents.file %>');
              fetch('/documents/save', {
                method: 'POST',
                body: formData
              }).then(function (response) {
                if (response.status === 200) {
                  response.json().then(function (data) {
                    /* Resolve the save API promise with the response data */
                    options.success(data);
                  });
                } else {
                  /* Reject the save API promise with error message */
                  options.error('Error while saving file');
                }
              });

              // fetch('/documents/test', {
              //   method: 'POST'
              // });
              return new Promise((resolve, reject) => {
                resolve({
                  code: AdobeDC.View.Enum.ApiResponseCode.SUCCESS,
                  data: {
                    /* Updated file metadata after successful save operation */
                    metaData: {
                      /* Updated file name */
                      fileName: "<%= documents.name %>" + "-<%= user.name %>-แก้ไข" + ".pdf",
                    }
                  }
                });
              });
            },
            saveOptions
          );
        });
      </script>
      <script type="text/javascript"></script>
      </script>
    </div>
  </div>